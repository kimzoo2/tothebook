spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ENC(8AiDQy4c7Rany3nw7LeKD4ISj4pexOQEE12DE0UTomD11+/PCcCCnmEy3dgbhWcVuewK505VeEbV0uNJRQUpKije5VDOHtTmWAv2Vk0Dj3gnZOXrKh7ljchNq9T+T4ElaBDORGedpgw=)
    username: ENC(bskRTP8ZMot4OkzYegQXpg==)
    password: ENC(BQnrZEzm4a5MmkkFbYj3rIfFmjtYjd2m)

  jpa:
    open-in-view: true
    hibernate:
      ddl-auto: none # 또는 validate (create 사용해도 되려면 개발 끝나기 전 entity 제대로 만든 후 적용)
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      use-new-id-generator-mappings: false
    show-sql: true
    properties:
      hibernate.format_sql: true
      dialect: org.hibernate.dialect.MySQL8InnoDBDialect

  # thymeleaf 설정
  thymeleaf:
    prefix: classpath:templates/
    suffix: .html
    #cache: false 타임리프 소스 변경 시 서버를 재시작 하지 않아도 적용해줌. (배포 시 true로 변경할 것)

# log 설정
logging:
  level:
    root: info
    com.std.tothebook.api: debug
    org.hibernate.SQL: debug

# swagger 설정
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    # groups-order: DESC
    operationsSorter: method
    disable-swagger-default-url: true
    display-request-duration: true
  api-docs:
    path: /api-docs
  show-actuator: true
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
  paths-to-match:
    - /**